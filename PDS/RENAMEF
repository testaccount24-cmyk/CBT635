/*BEGIN ==================== REXX ===================================*/
/*                                                                   */
/*       This REXX will rename all files catalogued at some level    */
/*  in the system.  The inputs to this procedure are the source      */
/*  level and then the desired output level ( both required ) and    */
/*  then an argument to cause the commands to be executed.  The      */
/*  third and optional argument should be 'EXEC' to cause the        */
/*  rename commands to get executed.  If it is not the third         */
/*  argument, the command lines just get printed for your perusal.   */
/*  Since this program changes a lot of file names and may have      */
/*  many consequences, much care should be taken in its use.  I      */
/*  have arrived at that conclusion through several painful          */
/*  experiences.                                                     */
/*                                                                   */
/*END ===============================================================*/

/* Get any possible argument                                         */
parse upper arg input

/* The command line must have something or else we lecture the guy   */
if length(input) = 0 then do

/* Search for start of comment                                       */
  do i = 1 to sourceline()
    if '/*BEGIN' = left(sourceline(i),7) then leave
    end

/* If we're at end of program, report and quit                       */
  if i > sourceline() then do
    say ' '
    say "There are no comments in this program, so they aren't printed."
    exit
    end

/* Else print them out while searching for end                       */
  do j = i + 1 to sourceline()
    if '/*END' = left(sourceline(j),5) then leave
    s = strip(sourceline(j),'l')
    l = pos('/*',s)
    if l > 0 then k = pos('*/',s)
    else do
      l = -1
      k = length(s) + 3
      end
    if k < 1 then k = length(s) + 3
    say substr(s,l+2,k-3)
    end
  exit
  end

/* Get the original file name prefix from the input                  */
parse var input lev input
lenlev = length(lev)

/* Same thing for second argument ( new file name prefix )           */
do while length(input) = 0
  say 'Enter the prefix for the new file names'
  parse upper pull input
  end

/* Get the original file name prefix from the input                  */
parse var input out input

/* Look for a possible third argument                                */
if length(input) > 0 then do
  parse var input exe input
  if exe = 'EXEC' then do
    exec = 1
    say 'The rename commands will be executed.  Hit enter to continue.'
    say 'If this is a mistake, interrupt the execution now.'
    parse pull ans
    end
  end
else do
  say 'The rename commands will only be printed and not executed.'
  exec = 0
  end

/* Set the outtrap capture and issue the command for that level      */
cmd = 'listc lev('lev')'
x = outtrap('line.','*')
cmd
x = outtrap('OFF')

/* If there were no files with that name respectfully leave          */
if pos('NOT FOUND',line.1) > 0 then do
  say 'There was no return from the command:' cmd
  exit 4
  end

/* Let the user know what we found for files                         */
say 'There were' line.0 'lines returned from the command.'

/* Now go ahead and process all the files listed                     */
do i = 1 to line.0
  x = pos(lev,line.i)
  if x > 1 then do
    orig = substr(line.i,x)
    final = out || substr(line.i,x+lenlev)
    cmd = "rename '"orig"' '"final"'"
    say cmd
    if exec = 1 then cmd
    end
  end

